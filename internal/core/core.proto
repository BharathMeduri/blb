// Copyright (c) 2017 Western Digital Corporation or its affiliates. All rights reserved.
// SPDX-License-Identifier: MIT

syntax = "proto2";

package core;

// StorageClass specifies how blob data is stored. If a blob has a certain
// storage class, then all tracts in the blob are encoded with that class.
// (They may also be encoded with another class at the same time, to allow for
// transitions beteween classes).
enum StorageClass {
  // Data is fully replicated n times.
  REPLICATED = 0;

  // Reed-Solomon N_M, with N data and M parity.
  RS_6_3  = 1; // 1.500 factor
  RS_8_3  = 2; // 1.375
  RS_10_3 = 3; // 1.300
  RS_12_5 = 4; // 1.417 (but more durability)
}

// StorageHint is a hint specified by client code about how it intents to use
// this blob in the future. Blb will use the storage hint in conjunction with
// usage data that it collects to choose an appropriate storage class for the
// blob.
enum StorageHint {
  DEFAULT = 0; // Default storage.
  HOT     = 1; // Data will be read frequently and might be written to in the future.
  WARM    = 2; // Data will be read less often and is write-once.
  COLD    = 3; // Data will be read rarely and is write-once.
}

// Priority is a hint to the tractserver about how to order operations.
enum Priority {
  TSDEFAULT = 0; // Let the tractserver use its default (in practice, equal to MEDIUM).
  LOW       = 1; // Lower priority than most operations (equal to scrubbing priority).
  MEDIUM    = 2; // Normal priority.
  HIGH      = 3; // Higher priority than most operations.
}
